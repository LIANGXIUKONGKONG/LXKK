<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vote.mapper.PerformanceMapper">
  <resultMap id="BaseResultMap" type="com.vote.bean.Performance">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="performance_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="match_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="singer1_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="singer2_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="audience_vote1" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="audience_vote2" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="judge_score1" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="judge_score2" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="total_score1" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="total_score2" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="status" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, performance_name, match_id, singer1_id, singer2_id, audience_vote1, audience_vote2, 
    judge_score1, judge_score2, total_score1, total_score2, status
  </sql>
  <select id="selectByExample" parameterType="com.vote.bean.PerformanceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from performance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from performance
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from performance
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.vote.bean.PerformanceExample">
    delete from performance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.vote.bean.Performance">
    insert into performance (id, performance_name, match_id, 
      singer1_id, singer2_id, audience_vote1, 
      audience_vote2, judge_score1, judge_score2, 
      total_score1, total_score2, status
      )
    values (#{id,jdbcType=INTEGER}, #{performanceName,jdbcType=VARCHAR}, #{matchId,jdbcType=INTEGER}, 
      #{singer1Id,jdbcType=INTEGER}, #{singer2Id,jdbcType=INTEGER}, #{audienceVote1,jdbcType=INTEGER}, 
      #{audienceVote2,jdbcType=INTEGER}, #{judgeScore1,jdbcType=INTEGER}, #{judgeScore2,jdbcType=INTEGER}, 
      #{totalScore1,jdbcType=VARCHAR}, #{totalScore2,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.vote.bean.Performance">
    insert into performance
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="performanceName != null">
        performance_name,
      </if>
      <if test="matchId != null">
        match_id,
      </if>
      <if test="singer1Id != null">
        singer1_id,
      </if>
      <if test="singer2Id != null">
        singer2_id,
      </if>
      <if test="audienceVote1 != null">
        audience_vote1,
      </if>
      <if test="audienceVote2 != null">
        audience_vote2,
      </if>
      <if test="judgeScore1 != null">
        judge_score1,
      </if>
      <if test="judgeScore2 != null">
        judge_score2,
      </if>
      <if test="totalScore1 != null">
        total_score1,
      </if>
      <if test="totalScore2 != null">
        total_score2,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="performanceName != null">
        #{performanceName,jdbcType=VARCHAR},
      </if>
      <if test="matchId != null">
        #{matchId,jdbcType=INTEGER},
      </if>
      <if test="singer1Id != null">
        #{singer1Id,jdbcType=INTEGER},
      </if>
      <if test="singer2Id != null">
        #{singer2Id,jdbcType=INTEGER},
      </if>
      <if test="audienceVote1 != null">
        #{audienceVote1,jdbcType=INTEGER},
      </if>
      <if test="audienceVote2 != null">
        #{audienceVote2,jdbcType=INTEGER},
      </if>
      <if test="judgeScore1 != null">
        #{judgeScore1,jdbcType=INTEGER},
      </if>
      <if test="judgeScore2 != null">
        #{judgeScore2,jdbcType=INTEGER},
      </if>
      <if test="totalScore1 != null">
        #{totalScore1,jdbcType=VARCHAR},
      </if>
      <if test="totalScore2 != null">
        #{totalScore2,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.vote.bean.PerformanceExample" resultType="java.lang.Long">
    select count(*) from performance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update performance
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.performanceName != null">
        performance_name = #{record.performanceName,jdbcType=VARCHAR},
      </if>
      <if test="record.matchId != null">
        match_id = #{record.matchId,jdbcType=INTEGER},
      </if>
      <if test="record.singer1Id != null">
        singer1_id = #{record.singer1Id,jdbcType=INTEGER},
      </if>
      <if test="record.singer2Id != null">
        singer2_id = #{record.singer2Id,jdbcType=INTEGER},
      </if>
      <if test="record.audienceVote1 != null">
        audience_vote1 = #{record.audienceVote1,jdbcType=INTEGER},
      </if>
      <if test="record.audienceVote2 != null">
        audience_vote2 = #{record.audienceVote2,jdbcType=INTEGER},
      </if>
      <if test="record.judgeScore1 != null">
        judge_score1 = #{record.judgeScore1,jdbcType=INTEGER},
      </if>
      <if test="record.judgeScore2 != null">
        judge_score2 = #{record.judgeScore2,jdbcType=INTEGER},
      </if>
      <if test="record.totalScore1 != null">
        total_score1 = #{record.totalScore1,jdbcType=VARCHAR},
      </if>
      <if test="record.totalScore2 != null">
        total_score2 = #{record.totalScore2,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update performance
    set id = #{record.id,jdbcType=INTEGER},
      performance_name = #{record.performanceName,jdbcType=VARCHAR},
      match_id = #{record.matchId,jdbcType=INTEGER},
      singer1_id = #{record.singer1Id,jdbcType=INTEGER},
      singer2_id = #{record.singer2Id,jdbcType=INTEGER},
      audience_vote1 = #{record.audienceVote1,jdbcType=INTEGER},
      audience_vote2 = #{record.audienceVote2,jdbcType=INTEGER},
      judge_score1 = #{record.judgeScore1,jdbcType=INTEGER},
      judge_score2 = #{record.judgeScore2,jdbcType=INTEGER},
      total_score1 = #{record.totalScore1,jdbcType=VARCHAR},
      total_score2 = #{record.totalScore2,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.vote.bean.Performance">
    update performance
    <set>
      <if test="performanceName != null">
        performance_name = #{performanceName,jdbcType=VARCHAR},
      </if>
      <if test="matchId != null">
        match_id = #{matchId,jdbcType=INTEGER},
      </if>
      <if test="singer1Id != null">
        singer1_id = #{singer1Id,jdbcType=INTEGER},
      </if>
      <if test="singer2Id != null">
        singer2_id = #{singer2Id,jdbcType=INTEGER},
      </if>
      <if test="audienceVote1 != null">
        audience_vote1 = #{audienceVote1,jdbcType=INTEGER},
      </if>
      <if test="audienceVote2 != null">
        audience_vote2 = #{audienceVote2,jdbcType=INTEGER},
      </if>
      <if test="judgeScore1 != null">
        judge_score1 = #{judgeScore1,jdbcType=INTEGER},
      </if>
      <if test="judgeScore2 != null">
        judge_score2 = #{judgeScore2,jdbcType=INTEGER},
      </if>
      <if test="totalScore1 != null">
        total_score1 = #{totalScore1,jdbcType=VARCHAR},
      </if>
      <if test="totalScore2 != null">
        total_score2 = #{totalScore2,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.vote.bean.Performance">
    update performance
    set performance_name = #{performanceName,jdbcType=VARCHAR},
      match_id = #{matchId,jdbcType=INTEGER},
      singer1_id = #{singer1Id,jdbcType=INTEGER},
      singer2_id = #{singer2Id,jdbcType=INTEGER},
      audience_vote1 = #{audienceVote1,jdbcType=INTEGER},
      audience_vote2 = #{audienceVote2,jdbcType=INTEGER},
      judge_score1 = #{judgeScore1,jdbcType=INTEGER},
      judge_score2 = #{judgeScore2,jdbcType=INTEGER},
      total_score1 = #{totalScore1,jdbcType=VARCHAR},
      total_score2 = #{totalScore2,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>